[tool:pytest]
# Pytest configuration for Exam Grader

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output and reporting
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --color=yes
    --durations=10
    --cov=src
    --cov=webapp
    --cov=utils
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=70

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    api: API endpoint tests
    database: Database-related tests
    services: Service layer tests
    security: Security-related tests
    performance: Performance and load tests
    slow: Tests that take a long time to run
    external: Tests that require external services (OCR, LLM APIs)
    mock: Tests that use mocked dependencies
    real: Tests that use real dependencies

# Test environment
env = 
    TESTING = true
    FLASK_ENV = testing
    DATABASE_URL = sqlite:///:memory:
    SECRET_KEY = test-secret-key-for-testing-only
    CSRF_ENABLED = false
    LOG_LEVEL = ERROR
    SUPPRESS_STARTUP_LOGS = true

# Minimum Python version
minversion = 3.8

# Warning filters
filterwarnings =
    # Show our own deprecation warnings to fix them
    default::DeprecationWarning:src.*
    default::DeprecationWarning:webapp.*
    default::DeprecationWarning:utils.*
    # Ignore third-party deprecation warnings we can't fix
    ignore:PyPDF2 is deprecated.*:DeprecationWarning
    ignore:datetime.datetime.utcnow.*is deprecated.*:DeprecationWarning:*sqlalchemy*
    ignore::DeprecationWarning:*
    ignore::PendingDeprecationWarning:*
    ignore::UserWarning:flask_babel
    ignore::UserWarning:werkzeug
